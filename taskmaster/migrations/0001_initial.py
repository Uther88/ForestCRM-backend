# -*- coding: utf-8 -*-
# Generated by Django 1.11.6 on 2018-06-20 08:32
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taskmaster.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('primary_docs', '0001_initial'),
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('third_name', models.CharField(max_length=50, verbose_name='Отчество')),
                ('position', models.CharField(max_length=50, verbose_name='Должность')),
                ('avatar', models.ImageField(blank=True, max_length=255, upload_to='media/users/avatars/', verbose_name='Аватар')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='employees', to='primary_docs.Organization', verbose_name='Организация')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default=None, max_length=50, verbose_name='Название')),
                ('description', models.TextField(blank=True, default=None, max_length=255, null=True, verbose_name='Описание')),
                ('file', models.FileField(max_length=255, upload_to=taskmaster.models.upload_file, verbose_name='Файл')),
                ('recipient', models.ManyToManyField(blank=True, related_name='received_files', to=settings.AUTH_USER_MODEL, verbose_name='Получатель')),
                ('sender', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='send_files', to=settings.AUTH_USER_MODEL, verbose_name='Отправитель')),
            ],
            options={
                'verbose_name': 'Файл',
                'verbose_name_plural': 'Файлы',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Новое сообщение', max_length=50, verbose_name='Тема')),
                ('text', models.TextField(default=None, max_length=500, verbose_name='Текст')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Созданно')),
                ('is_new', models.BooleanField(default=True, verbose_name='Не прочитанное')),
                ('files', models.ManyToManyField(blank=True, related_name='messages', to='taskmaster.File', verbose_name='Файлы')),
                ('recipient', models.ManyToManyField(related_name='incoming_messages', to=settings.AUTH_USER_MODEL, verbose_name='Кому')),
                ('sender', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='outcoming_messages', to=settings.AUTH_USER_MODEL, verbose_name='Отправитель')),
            ],
            options={
                'verbose_name': 'Сообщение',
                'verbose_name_plural': 'Сообщения',
                'ordering': ['-created_date'],
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('importance', models.CharField(choices=[('danger', 'высокая'), ('warning', 'средняя'), ('success', 'низкая')], max_length=10, null=True, verbose_name='Важность')),
                ('title', models.CharField(default=None, max_length=50, verbose_name='Название')),
                ('text', models.TextField(default=None, max_length=350, null=True, verbose_name='Описание')),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Созданно')),
                ('completed_date', models.DateTimeField(blank=True, default=None, null=True, verbose_name='Выполнено')),
                ('to_complete', models.DateTimeField(default=None, verbose_name='Выполнить до')),
                ('is_completed', models.BooleanField(default=False, verbose_name='Завершено')),
                ('assigner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='given_tasks', to=settings.AUTH_USER_MODEL, verbose_name='Назначающий')),
                ('files', models.ManyToManyField(blank=True, max_length=255, related_name='task', to='taskmaster.File', verbose_name='Файлы')),
                ('performer', models.ForeignKey(default=taskmaster.models.User, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to=settings.AUTH_USER_MODEL, verbose_name='Исполнитель')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
                'ordering': ['-to_complete'],
            },
        ),
    ]
